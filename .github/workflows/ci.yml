name: CI/CD - Main Branches

on:
  push:
    branches: [main, develop]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Validate code through Docker
  validate:
    name: Validate
    runs-on: ubuntu-latest
      
    steps:
      - uses: actions/checkout@v4
      
      - name: Validate
        run: make validate

  # Deploy to appropriate environment (includes build & push)
  deploy:
    needs: validate
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin
      
      - name: Setup Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
      
      - name: Deploy to Preview (develop branch)
        if: github.ref == 'refs/heads/develop'
        env:
          PORTAINER_API_KEY: ${{ secrets.PORTAINER_API_KEY }}
          PORTAINER_HOST: ${{ secrets.PORTAINER_HOST }}
        run: make deploy-preview
      
      - name: Deploy to Production (main branch)
        if: github.ref == 'refs/heads/main'
        env:
          PORTAINER_API_KEY: ${{ secrets.PORTAINER_API_KEY }}
          PORTAINER_HOST: ${{ secrets.PORTAINER_HOST }}
        run: |
          # Auto-confirm for CI
          echo "deploy" | make deploy-prod

  # Run E2E tests against deployed environment
  e2e-tests:
    needs: deploy
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium
        working-directory: apps/web
      
      - name: Run E2E tests
        run: pnpm test:e2e --project=chromium
        working-directory: apps/web
        env:
          PLAYWRIGHT_BASE_URL: ${{ github.ref == 'refs/heads/main' && 'https://app.clubomatic.ai' || 'https://preview.clubomatic.ai' }}
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-results-${{ github.sha }}
          path: |
            apps/web/playwright-report/
            apps/web/test-results/
          retention-days: 7